# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install Python and nbconvert
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install nbconvert
        run: pip install nbconvert
      # Convert all ipynb files recursively into HTML docs
      - name: Convert ipynb to HTML
        run: |
          mkdir -p notebooks_html
          find . -name "*.ipynb" -not -path "./.git/*" -not -path "./notebooks_html/*" | while read notebook; do
            # Get relative directory path and create corresponding output directory
            dir_path=$(dirname "$notebook")
            output_dir="notebooks_html/${dir_path#./}"
            mkdir -p "$output_dir"
            # Convert notebook to HTML maintaining directory structure
            jupyter nbconvert --to html --output-dir "$output_dir" "$notebook"
          done
      # Copy the converted HTML to your Jekyll site folder maintaining directory structure
      - name: Copy HTML notebooks to site
        run: |
          mkdir -p ./_notebooks
          # Copy all HTML files maintaining directory structure
          find notebooks_html -name "*.html" | while read html_file; do
            # Get relative path and create corresponding directory in _notebooks
            rel_path=${html_file#notebooks_html/}
            target_dir="./_notebooks/$(dirname "$rel_path")"
            mkdir -p "$target_dir"
            cp "$html_file" "$target_dir/"
          done
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
